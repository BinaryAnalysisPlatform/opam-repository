#!/bin/sh

# Use llvm-config OPAM variable if set, LLVM_CONFIG env variable otherwise

# if LLVM_CONFIG variable doesn't explicitly specify which llvm-config
# we should use, then we will search across all possible llvm-configs
# that might work for us.  Our search strategy is to try to pick up
# 3.4, then 3.8, then 4.0.0, and, if neither found, fallback to any
# llvm-config.
#
# Note - suffix `-mp-` stands for macports, and will work on macs
# if used with macports.

config=`opam config var llvm-config 2>/dev/null` || true
if [ -z $config ]; then
    config=$LLVM_CONFIG
fi

if ! which "$config" ; then
    config="llvm-config"
    versions="3.4 3.8 4.0 5.0 6.0 7.0"

    for version in $versions; do

        if hash brew 2>/dev/null; then
            brew_llvm_config="$(brew --cellar)"/llvm*/${version}*/bin/llvm-config
        fi

        configs="llvm-config-$version llvm-config${version//./} llvm-config-mp-$version $brew_llvm_config"

        for llvm_config in $configs; do
            if which $llvm_config; then
                llvm_version="`$llvm_config --version`" || true
                case $llvm_version in
                    $version*)
                        config=$llvm_config
                        break ;;
                    *)
                        continue;
                esac
            fi
        done
    done
fi

if ! which "$config" ; then
    exit 1
else
    version=`$config --version`
fi

path=`which $config`
if [ `opam config var os` = "linux" ]; then
    checksum=`md5sum $path | cut -d' ' -f 1`
elif  [ `opam config var os` = "macos" ]; then
    checksum=`md5 -q $path`
else
    checksum=""
fi

filename="conf-bap-llvm.config"
cat > $filename <<EOF
opam-version: "2.0.0"
EOF

if [ ! -z "$checksum" ]; then
    echo "file-depends: [ [ \"$path\" \"md5=$checksum\" ] ]" >> $filename
fi

cat >> $filename <<EOF
variables {
  config: "$config"
  package-version: "$version"
}
EOF
